{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { calculateDelay, getFullMinutes, parseUTCDate } from './Utils';\nimport Origin from './Origin';\nfunction Arrivals() {\n  _s();\n  // ...\n\n  const [requestCancelToken, setRequestCancelToken] = useState(null);\n  useEffect(() => {\n    const cancelToken = axios.CancelToken.source();\n    setRequestCancelToken(cancelToken);\n    axios.get(`https://api.sncf.com/v1/coverage/sncf/stop_areas/${codeStation}/arrivals`, {\n      headers: {\n        Authorization: `${process.env.REACT_APP_API_KEY}`\n      },\n      cancelToken: cancelToken.token\n    }).then(response => {\n      // ...\n    }).catch(error => {\n      if (axios.isCancel(error)) {\n        // La requête a été annulée, ne faites rien ici\n      } else {\n        // Gérer les autres erreurs ici\n      }\n    });\n    return () => {\n      // Annuler la requête en cours lorsque le composant est démonté\n      cancelToken.cancel();\n    };\n  }, [codeStation]);\n\n  // ...\n}\n_s(Arrivals, \"GYtEudbwRkFTTfuqtqiCsK7pZ8s=\");\n_c = Arrivals;\nexport default Arrivals;\nvar _c;\n$RefreshReg$(_c, \"Arrivals\");","map":{"version":3,"names":["axios","React","useEffect","useState","calculateDelay","getFullMinutes","parseUTCDate","Origin","Arrivals","_s","requestCancelToken","setRequestCancelToken","cancelToken","CancelToken","source","get","codeStation","headers","Authorization","process","env","REACT_APP_API_KEY","token","then","response","catch","error","isCancel","cancel","_c","$RefreshReg$"],"sources":["C:/Users/Adima/OneDrive/Documents/GitHub/TVsncf/src/components/Arrivals.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { calculateDelay, getFullMinutes, parseUTCDate } from './Utils';\nimport Origin from './Origin';\n\nfunction Arrivals() {\n  // ...\n\n  const [requestCancelToken, setRequestCancelToken] = useState(null);\n\n  useEffect(() => {\n    const cancelToken = axios.CancelToken.source();\n\n    setRequestCancelToken(cancelToken);\n\n    axios\n      .get(\n        `https://api.sncf.com/v1/coverage/sncf/stop_areas/${codeStation}/arrivals`,\n        {\n          headers: {\n            Authorization: `${process.env.REACT_APP_API_KEY}`,\n          },\n          cancelToken: cancelToken.token,\n        }\n      )\n      .then((response) => {\n        // ...\n      })\n      .catch((error) => {\n        if (axios.isCancel(error)) {\n          // La requête a été annulée, ne faites rien ici\n        } else {\n          // Gérer les autres erreurs ici\n        }\n      });\n\n    return () => {\n      // Annuler la requête en cours lorsque le composant est démonté\n      cancelToken.cancel();\n    };\n  }, [codeStation]);\n\n  // ...\n}\n\nexport default Arrivals\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,cAAc,EAAEC,YAAY,QAAQ,SAAS;AACtE,OAAOC,MAAM,MAAM,UAAU;AAE7B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;;EAEA,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAElED,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAGZ,KAAK,CAACa,WAAW,CAACC,MAAM,CAAC,CAAC;IAE9CH,qBAAqB,CAACC,WAAW,CAAC;IAElCZ,KAAK,CACFe,GAAG,CACD,oDAAmDC,WAAY,WAAU,EAC1E;MACEC,OAAO,EAAE;QACPC,aAAa,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB;MAClD,CAAC;MACDT,WAAW,EAAEA,WAAW,CAACU;IAC3B,CACF,CAAC,CACAC,IAAI,CAAEC,QAAQ,IAAK;MAClB;IAAA,CACD,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChB,IAAI1B,KAAK,CAAC2B,QAAQ,CAACD,KAAK,CAAC,EAAE;QACzB;MAAA,CACD,MAAM;QACL;MAAA;IAEJ,CAAC,CAAC;IAEJ,OAAO,MAAM;MACX;MACAd,WAAW,CAACgB,MAAM,CAAC,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,CAACZ,WAAW,CAAC,CAAC;;EAEjB;AACF;AAACP,EAAA,CAtCQD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAwCjB,eAAeA,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}